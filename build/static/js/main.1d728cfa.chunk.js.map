{"version":3,"sources":["services/entities/postsApi.js","components/Header/Header.jsx","components/HomePage/HomePage.jsx","store/actions/Posts.js","services/serviceAPI.js","services/entities/commentsApi.js","helpers/mappingPosts.js","assets/images/spinner.gif","components/Preloader/Preloader.jsx","components/PostItem/PostItem.jsx","store/actionCreators/Posts.js","components/PostsFilter/PostsFilter.js","components/RandomNumberItem/RandomNumberItem.jsx","components/RandomNumber/RandomNumber.js","components/PostsList/PostsList.js","hooks/useObserver.js","helpers/getMorePosts.js","components/CommentItem/CommentItem.jsx","components/CommentsList/CommentsList.js","components/Post/Post.js","components/HeavyComponentItem/HeavyComponentItem.js","components/HeavyComponent/HeavyComponent.js","App.js","store/reducers/Posts.js","store/reducers/index.js","store/store.js","index.js","components/Preloader/style.module.css","components/HeavyComponent/animation.module.css"],"names":["API","Header","style","display","marginLeft","marginRight","to","HomePage","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","EDIT_POST","REMOVE_POST","apiEndpoint","Api","_instance","this","api","axios","create","baseURL","interceptors","request","use","config","response","value","toast","success","error","data","Promise","reject","postsApi","getAllPosts","a","get","commentsApi","getAllComments","Comments_API","mappingPosts","posts","comments","console","time","postsArray","postsLength","length","commentsLength","i","obj","currentPostId","century","id","Math","floor","postComments","filter","item","postId","oldId","map","timeEnd","Preloader","className","styles","imageWrapper","image","src","spinner","alt","PostItem","props","post","title","body","dispatch","useDispatch","Card","width","Body","Title","Text","Row","Col","Button","variant","position","top","left","height","pathname","state","onClick","type","payload","removePost","editPost","memo","PostsFilter","lastElement","useState","filterdPosts","setFiltredPosts","postFilter","setPostFilter","postsFiltredByInputValue","useMemo","includes","useEffect","current","TextField","label","name","fullWidth","onChange","e","target","maxWidth","gridGap","gridTemplateColumns","RandomNumberItem","RandomNumber","values","setValues","promiseTimer","useRef","asyncItem","resolve","setTimeout","infiniteNums","startValue","buffer","clearTimeout","float","overflowY","padding","val","PostsList","visiblePosts","setVisiblePosts","useSelector","postsList","isFetching","slice","ref","canLoad","isLoading","callback","observer","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","uploadedPosts","allPosts","visiblePostsLength","getMorePosts","all","postsAndComments","postsWithComments","getPosts","backgroundColor","CommentItem","comment","email","Grid","container","justifyContent","alignItems","direction","Box","py","borderBottom","Typography","gutterBottom","wordWrap","CommentsList","Post","useLocation","userId","HeavyComponentItem","increment","decrement","log","marginBottom","color","newEv","CustomEvent","detail","document","dispatchEvent","HeavyComponent","list","setList","handleChange","incrementValue","decrementValue","numsArray","nums","push","fillWithNums","addEventListener","removeEventListener","targetItem","find","targetIndex","findIndex","walkaboutOldSchool","App","exact","path","initialState","postsReducer","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1d728cfa.chunk.js","sourcesContent":["import { API } from \"../serviceAPI\";\n\nconst POSTS_API = (API) => {\n  const getAllPosts = async () => {\n    const { data } = await API.api.get(\"posts\");\n    return data;\n  };\n\n  return {\n    getAllPosts,\n  };\n};\n\nexport const postsApi = POSTS_API(API);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div style={{ display: \"inline-flex\" }}>\n      <Link style={{ marginLeft: \"20px\", marginRight: \"20px\" }} to={\"/\"}>\n        Home\n      </Link>\n      <Link style={{ marginLeft: \"20px\", marginRight: \"20px\" }} to={\"/posts\"}>\n        Posts\n      </Link>\n      <Link\n        style={{ marginLeft: \"20px\", marginRight: \"20px\" }}\n        to={\"/heavycomponent\"}\n      >\n        Heavy component\n      </Link>\n    </div>\n  );\n};\n\nexport default Header;\n","const HomePage = () => {\n  return <div>Netlify test</div>;\n};\n\nexport default HomePage;\n","export const GET_POSTS_REQUEST = \"GET_POSTS_REQUEST\";\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const REMOVE_POST = \"REMOVE_POST\";\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst apiEndpoint = \"https://jsonplaceholder.typicode.com\";\n\nclass Api {\n  constructor(apiEndpoint) {\n    if (Api._instance) {\n      return Api._instance;\n    }\n    Api._instance = this;\n\n    if (apiEndpoint)\n      this.api = axios.create({\n        baseURL: apiEndpoint,\n      });\n\n    this.api.interceptors.request.use((config) => {\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (value) => {\n        toast.success(\"Resolved!\");\n\n        return value;\n      },\n      (error) => {\n        toast.error(error.response.data);\n\n        return Promise.reject(error);\n      }\n    );\n  }\n}\n\nexport const API = new Api(apiEndpoint);\n","import { API } from \"../serviceAPI\";\n\nconst Comments_API = (API) => {\n  const getAllComments = async () => {\n    const { data } = await API.api.get(\"comments\");\n    return data;\n  };\n\n  return {\n    getAllComments,\n  };\n};\n\nexport const commentsApi = Comments_API(API);\n","export const mappingPosts = ([posts, comments]) => {\n  if (!posts || !comments) return;\n  console.time(\"mapping posts and comments\");\n  const postsArray = [];\n\n  const postsLength = posts.length;\n  const commentsLength = comments.length;\n\n  for (let i = 0; i < postsLength * 10; i++) {\n    let obj, currentPostId, century;\n\n    if (posts[i]) {\n      obj = posts[i];\n      currentPostId = obj.id;\n    } else {\n      obj = posts[i % postsLength];\n      century = Math.floor(i / postsLength);\n      currentPostId = obj.id + postsLength * century;\n    }\n\n    const postComments = comments.filter((item) => item.postId === obj.id);\n    postsArray[i] = {\n      ...obj,\n      oldId: obj.id,\n      id: currentPostId,\n      comments: [\n        ...postComments.map((item) => {\n          return {\n            ...item,\n            id: i < postsLength ? item.id : item.id + commentsLength * century,\n          };\n        }),\n      ],\n    };\n  }\n  console.timeEnd(\"mapping posts and comments\");\n  return postsArray;\n};\n","export default __webpack_public_path__ + \"static/media/spinner.93bf5f90.gif\";","import spinner from \"../../assets/images/spinner.gif\";\nimport styles from \"./style.module.css\";\n\nconst Preloader = () => {\n  return (\n    <figure className={styles.imageWrapper}>\n      <img className={styles.image} src={spinner} alt=\"spinner gif\" />\n    </figure>\n  );\n};\n\nexport default Preloader;\n","import {Row, Col, Button, Card} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {removePost, editPost} from \"../../store/actionCreators/Posts\";\nimport {memo} from \"react\";\n\nconst PostItem = (props) => {\n    const {title, body, id} = props.post;\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <Card style={{width: \"22.5rem\"}}>\n                <Card.Body className=\"d-flex flex-column justify-content-between\">\n                    <Card.Title>\n                        {id} {title}\n                    </Card.Title>\n                    <Card.Text>{body}</Card.Text>\n                    <Row>\n                        <Col>\n                            <Button\n                                variant=\"outline-primary\"\n                                style={{position: \"relative\"}}\n                            >\n                                <Link\n                                    style={{\n                                        position: \"absolute\",\n                                        top: \"0\",\n                                        left: \"0\",\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                    }}\n                                    to={{pathname: `/posts/${id}`, state: props.post}}\n                                />\n                                Read more\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                variant=\"outline-primary\"\n                                onClick={() => dispatch(removePost(id))}\n                            >\n                                Remove post\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                variant=\"outline-primary\"\n                                onClick={() =>\n                                    dispatch(\n                                        editPost(id, {\n                                            title: \"updated Title\",\n                                            body: \"updated Body\",\n                                        })\n                                    )\n                                }\n                            >\n                                edit\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default memo(PostItem);\n// export default PostItem;\n","import {\n  GET_POSTS_REQUEST,\n  GET_POSTS_SUCCESS,\n  EDIT_POST,\n  REMOVE_POST,\n} from \"../actions/Posts\";\nimport { postsApi } from \"../../services/entities/postsApi\";\nimport { commentsApi } from \"../../services/entities/commentsApi\";\nimport { mappingPosts } from \"../../helpers/mappingPosts\";\n\nexport const getAllPosts = () => {\n  return async (dispatch) => {\n    dispatch({ type: GET_POSTS_REQUEST });\n\n    const postsAndComments = await Promise.all([\n      postsApi.getAllPosts(),\n      commentsApi.getAllComments(),\n    ]);\n    const postsWithComments = mappingPosts(postsAndComments);\n    setTimeout(() => {\n      dispatch({ type: GET_POSTS_SUCCESS, payload: postsWithComments });\n    }, 2000);\n  };\n};\n\nexport const editPost = (id, data) => ({\n  type: EDIT_POST,\n  payload: { id, data },\n});\n\nexport const removePost = (id) => ({ type: REMOVE_POST, payload: id });\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport PostItem from \"../PostItem/PostItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst PostsFilter = ({ posts, lastElement }) => {\n  const [filterdPosts, setFiltredPosts] = useState([]);\n  const [postFilter, setPostFilter] = useState(\"\");\n\n  const handleChange = (e) => {\n    setPostFilter(e.target.value);\n  };\n\n  const postsFiltredByInputValue = useMemo(() => {\n    return posts.filter(\n      (post) =>\n        post.title.includes(postFilter) || post.body.includes(postFilter)\n    );\n  }, [postFilter, posts]);\n\n  useEffect(() => {\n    if (posts.length !== 0 && postsFiltredByInputValue.length === 0) {\n      lastElement.current.style.display = \"none\";\n    } else {\n      lastElement.current.style.display = \"block\";\n    }\n    setFiltredPosts(postsFiltredByInputValue);\n  }, [postsFiltredByInputValue, lastElement, posts]);\n\n  return (\n    <>\n      <TextField\n        label=\"postsFilter\"\n        variant=\"outlined\"\n        name=\"postsFilter\"\n        fullWidth\n        onChange={handleChange}\n      />\n      <ul\n        style={{\n          display: \"grid\",\n          maxWidth: \"80vw\",\n          gridGap: \"20px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          gridTemplateColumns: \"repeat(4, 1fr)\",\n        }}\n      >\n        {filterdPosts.map((post) => (\n          <PostItem post={post} key={post.id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default PostsFilter;\n","import { memo } from \"react\";\n\nconst RandomNumberItem = ({ value }) => {\n  return <li>{value}</li>;\n};\n\nexport default memo(RandomNumberItem);\n","import React, { useState, useEffect, useRef, memo } from \"react\";\nimport RandomNumberItem from \"./../RandomNumberItem/RandomNumberItem\";\n\nconst RandomNumber = () => {\n  const [values, setValues] = useState([]);\n  const promiseTimer = useRef();\n\n  const asyncItem = (i) => {\n    return new Promise((resolve) => {\n      promiseTimer.current = setTimeout(() => resolve(i), 0);\n    });\n  };\n\n  const infiniteNums = async (startValue) => {\n    let buffer = [];\n\n    for (let i = startValue; i < startValue + 100; i++) {\n      const item = await asyncItem(i);\n      buffer = [...buffer, item];\n    }\n\n    setValues(() => [...values, ...buffer]);\n  };\n\n  useEffect(() => {\n    if (values.length < 1e9) {\n      infiniteNums(values.length);\n    }\n  }, [values]);\n\n  useEffect(() => {\n    infiniteNums(values.length);\n\n    return () => {\n      clearTimeout(promiseTimer.current);\n    };\n  }, []);\n\n  return (\n    <ul\n      style={{\n        float: \"left\",\n        width: \"100px\",\n        overflowY: \"auto\",\n        height: \"300px\",\n        marginRight: \"40px\",\n        padding: \"5px\",\n      }}\n    >\n      {values.map((val) => (\n        <RandomNumberItem value={val} key={val} />\n      ))}\n    </ul>\n  );\n};\n\nexport default memo(RandomNumber);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllPosts } from \"../../store/actionCreators/Posts\";\nimport { getMorePosts } from \"./../../helpers/getMorePosts\";\nimport { useObserver } from \"./../../hooks/useObserver\";\nimport Preloader from \"../Preloader/Preloader\";\nimport PostsFilter from \"../PostsFilter/PostsFilter\";\nimport RandomNumber from \"../RandomNumber/RandomNumber\";\n\nconst PostsList = () => {\n  const [visiblePosts, setVisiblePosts] = useState([]);\n  const lastElement = useRef();\n\n  const { postsList, isFetching } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n\n  const observerCallback = (visiblePosts) => {\n    const uploadedPosts = getMorePosts(postsList, visiblePosts);\n    if (uploadedPosts) {\n      setVisiblePosts((visiblePosts) => [...visiblePosts, ...uploadedPosts]);\n    }\n  };\n\n  useEffect(() => {\n    setVisiblePosts((visiblePosts) => [\n      ...postsList.slice(0, visiblePosts.length),\n    ]);\n  }, [postsList]);\n\n  useObserver(\n    lastElement,\n    postsList.length !== visiblePosts,\n    isFetching,\n    observerCallback,\n    visiblePosts\n  );\n\n  useEffect(() => {\n    if (postsList.length !== 0) return;\n\n    const getPosts = async () => {\n      await dispatch(getAllPosts());\n    };\n\n    getPosts();\n  }, []);\n\n  return (\n    <>\n      <RandomNumber />\n      {isFetching ? (\n        <Preloader />\n      ) : (\n        <div>\n          <PostsFilter posts={visiblePosts} lastElement={lastElement} />\n        </div>\n      )}\n      <div\n        ref={lastElement}\n        style={{ height: \"10px\", backgroundColor: \"red\" }}\n      ></div>\n    </>\n  );\n};\n\nexport default PostsList;\n","import { useEffect, useRef } from \"react\";\n\nexport const useObserver = (\n  ref,\n  canLoad,\n  isLoading,\n  callback,\n  visiblePosts\n) => {\n  const observer = useRef();\n\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n\n    const cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        setTimeout(() => {\n          callback(visiblePosts);\n        }, 50);\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading, visiblePosts]);\n};\n","export const getMorePosts = (allPosts, visiblePosts) => {\n  const visiblePostsLength = visiblePosts.length;\n  if (allPosts.length === visiblePostsLength) return;\n\n  return allPosts.slice(visiblePostsLength, visiblePostsLength + 50);\n};\n","import React from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core\";\n\nconst CommentItem = ({ comment }) => {\n  const { email, name, body } = comment;\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n    >\n      <Box width=\"50vw\" py=\"0.5rem\" borderBottom={1}>\n        <Box>\n          <Typography\n            variant=\"subtitle2\"\n            gutterBottom\n            style={{ wordWrap: \"break-word\" }}\n          >\n            {email}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography\n            variant=\"h6\"\n            gutterBottom\n            style={{ wordWrap: \"break-word\" }}\n          >\n            {name}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography\n            variant=\"body1\"\n            gutterBottom\n            style={{ wordWrap: \"break-word\" }}\n          >\n            {body}\n          </Typography>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default CommentItem;\n","import React from \"react\";\nimport CommentItem from \"../CommentItem/CommentItem\";\nimport { MapStateToProps } from \"react-redux\";\n\nconst CommentsList = ({ comments }) => {\n  return comments.map((comment) => (\n    <CommentItem comment={comment} key={comment.id} />\n  ));\n};\n\nexport default CommentsList;\n","import { useLocation } from \"react-router\";\nimport CommentsList from \"../CommentsList/CommentsList\";\n\nconst Post = () => {\n  const location = useLocation();\n  const { userId, body, title, comments, id } = location.state;\n  return (\n    <div>\n      <div>Author: {userId}</div>\n      <div>Title {title}</div>\n      <div>{body}</div>\n      <h5>Comments</h5>\n      <CommentsList comments={comments} />\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { memo, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nconst HeavyComponentItem = ({ item, increment, decrement }) => {\n  const { id, value } = item;\n\n  useEffect(() => {\n    console.log(\"render heavy component item\");\n  });\n\n  return (\n    <div style={{ borderBottom: \"1px solid black\", marginBottom: \"5px\" }}>\n      <div>id: {id}</div>\n      <div>value: {value}</div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            // increment(id);\n            const newEv = new CustomEvent(\"changeValue\", {\n              detail: { id, type: \"increment\" },\n            });\n            document.dispatchEvent(newEv);\n          }}\n        >\n          increment\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            // decrement(id);\n            const newEv = new CustomEvent(\"changeValue\", {\n              detail: { id, type: \"decrement\" },\n            });\n            document.dispatchEvent(newEv);\n          }}\n        >\n          decrement\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(HeavyComponentItem);\n","import React, { useState, useEffect } from \"react\";\nimport HeavyComponentItem from \"./../HeavyComponentItem/HeavyComponentItem\";\nimport RandomNumber from \"./../RandomNumber/RandomNumber\";\nimport styles from \"./animation.module.css\";\n\nconst HeavyComponent = () => {\n  const [list, setList] = useState([]);\n\n  const fillWithNums = () => {\n    console.time(\"fill array\");\n    const nums = [];\n    for (let i = 1; i <= 1000; i++) {\n      const item = { id: i, value: i };\n      nums.push(item);\n    }\n    console.timeEnd(\"fill array\");\n    return nums;\n  };\n\n  const handleChange = (e) => {\n    switch (e.detail.type) {\n      case \"increment\":\n        incrementValue(e.detail.id);\n        break;\n\n      case \"decrement\":\n        decrementValue(e.detail.id);\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    const numsArray = fillWithNums();\n    setList(numsArray);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"changeValue\", handleChange);\n\n    return () => document.removeEventListener(\"changeValue\", handleChange);\n  }, [list]);\n\n  const incrementValue = (id) => {\n    const targetItem = list.find((item) => item.id === id);\n    const targetIndex = list.findIndex((item) => item.id === targetItem.id);\n\n    setList((list) => [\n      ...list.slice(0, targetIndex),\n      { ...targetItem, value: targetItem.value + 1 },\n      ...list.slice(targetIndex + 1),\n    ]);\n  };\n\n  const decrementValue = (id) => {\n    const targetItem = list.find((item) => item.id === id);\n    const targetIndex = list.findIndex((item) => item.id === targetItem.id);\n    setList((list) => [\n      ...list.slice(0, targetIndex),\n      { ...targetItem, value: targetItem.value - 1 },\n      ...list.slice(targetIndex + 1),\n    ]);\n  };\n\n  return (\n    <>\n      <div className={styles.walkaboutOldSchool}></div>\n      <RandomNumber />\n      <ul>\n        {list.map((item) => (\n          <HeavyComponentItem\n            item={item}\n            key={item.id}\n            // increment={incrementValue}\n            // decrement={decrementValue}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default HeavyComponent;\n","import { ToastContainer } from \"react-toastify\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Header from \"./components/Header/Header\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport PostsList from \"./components/PostsList/PostsList\";\nimport Post from \"./components/Post/Post\";\nimport HeavyComponent from \"./components/HeavyComponent/HeavyComponent\";\n\nfunction App() {\n  return (\n    <>\n      <ToastContainer />\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/posts\">\n            <PostsList />\n          </Route>\n          <Route path=\"/posts/:id\">\n            <Post />\n          </Route>\n          <Route path=\"/heavycomponent\">\n            <HeavyComponent />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  GET_POSTS_REQUEST,\n  GET_POSTS_SUCCESS,\n  EDIT_POST,\n  REMOVE_POST,\n} from \"../actions/Posts\";\n\nconst initialState = { postsList: [], isFetching: false };\n\nconst postsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS_REQUEST:\n      return { ...state, isFetching: true };\n\n    case GET_POSTS_SUCCESS:\n      return {\n        ...state,\n        postsList: [...state.postsList, ...payload],\n        isFetching: false,\n      };\n    case EDIT_POST:\n      const { id, data } = payload;\n\n      return {\n        ...state,\n        postsList: state.postsList.map((item) => {\n          if (item.id !== id) return item;\n\n          return { ...item, ...data };\n        }),\n      };\n    case REMOVE_POST:\n      return {\n        ...state,\n        postsList: [...state.postsList.filter((post) => post.id !== payload)],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n","import { combineReducers } from \"redux\";\nimport posts from \"./Posts\";\n\nconst rootReducer = combineReducers({\n  posts,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"style_imageWrapper__34sXU\",\"image\":\"style_image__1I26G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"walkaboutOldSchool\":\"animation_walkaboutOldSchool__3lcQg\",\"slide-margin\":\"animation_slide-margin__3Nh8o\"};"],"sourceRoot":""}