{"ast":null,"code":"import _classCallCheck from\"/Users/eugenechernomor/Downloads/optimizationProject-main/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from\"axios\";import{toast}from\"react-toastify\";var apiEndpoint=\"https://jsonplaceholder.typicode.com\";var Api=function Api(apiEndpoint){_classCallCheck(this,Api);if(Api._instance){return Api._instance;}Api._instance=this;if(apiEndpoint)this.api=axios.create({baseURL:apiEndpoint});this.api.interceptors.request.use(function(config){return config;});this.api.interceptors.response.use(function(value){toast.success(\"Resolved!\");return value;},function(error){toast.error(error.response.data);return Promise.reject(error);});};export var API=new Api(apiEndpoint);","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/services/serviceAPI.js"],"names":["axios","toast","apiEndpoint","Api","_instance","api","create","baseURL","interceptors","request","use","config","response","value","success","error","data","Promise","reject","API"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,GAAMC,CAAAA,WAAW,CAAG,sCAApB,C,GAEMC,CAAAA,G,CACJ,aAAYD,WAAZ,CAAyB,2BACvB,GAAIC,GAAG,CAACC,SAAR,CAAmB,CACjB,MAAOD,CAAAA,GAAG,CAACC,SAAX,CACD,CACDD,GAAG,CAACC,SAAJ,CAAgB,IAAhB,CAEA,GAAIF,WAAJ,CACE,KAAKG,GAAL,CAAWL,KAAK,CAACM,MAAN,CAAa,CACtBC,OAAO,CAAEL,WADa,CAAb,CAAX,CAIF,KAAKG,GAAL,CAASG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,SAACC,MAAD,CAAY,CAC5C,MAAOA,CAAAA,MAAP,CACD,CAFD,EAIA,KAAKN,GAAL,CAASG,YAAT,CAAsBI,QAAtB,CAA+BF,GAA/B,CACE,SAACG,KAAD,CAAW,CACTZ,KAAK,CAACa,OAAN,CAAc,WAAd,EAEA,MAAOD,CAAAA,KAAP,CACD,CALH,CAME,SAACE,KAAD,CAAW,CACTd,KAAK,CAACc,KAAN,CAAYA,KAAK,CAACH,QAAN,CAAeI,IAA3B,EAEA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP,CACD,CAVH,EAYD,C,CAGH,MAAO,IAAMI,CAAAA,GAAG,CAAG,GAAIhB,CAAAA,GAAJ,CAAQD,WAAR,CAAZ","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst apiEndpoint = \"https://jsonplaceholder.typicode.com\";\n\nclass Api {\n  constructor(apiEndpoint) {\n    if (Api._instance) {\n      return Api._instance;\n    }\n    Api._instance = this;\n\n    if (apiEndpoint)\n      this.api = axios.create({\n        baseURL: apiEndpoint,\n      });\n\n    this.api.interceptors.request.use((config) => {\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (value) => {\n        toast.success(\"Resolved!\");\n\n        return value;\n      },\n      (error) => {\n        toast.error(error.response.data);\n\n        return Promise.reject(error);\n      }\n    );\n  }\n}\n\nexport const API = new Api(apiEndpoint);\n"]},"metadata":{},"sourceType":"module"}