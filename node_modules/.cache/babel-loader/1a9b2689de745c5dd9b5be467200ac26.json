{"ast":null,"code":"var _jsxFileName = \"/Users/eugenechernomor/Downloads/optimizationProject-main/src/components/RandomNumber/RandomNumber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, memo } from \"react\";\nimport RandomNumberItem from \"./../RandomNumberItem/RandomNumberItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomNumber = () => {\n  _s();\n\n  const [values, setValues] = useState([]);\n  const promiseTimer = useRef();\n\n  const asyncItem = i => {\n    return new Promise(resolve => {\n      promiseTimer.current = setTimeout(() => resolve(i), 0);\n    });\n  };\n\n  const infiniteNums = async startValue => {\n    let buffer = [];\n\n    for (let i = startValue; i < startValue + 100; i++) {\n      const item = await asyncItem(i);\n      buffer = [...buffer, item];\n    }\n\n    setValues(() => [...values, ...buffer]);\n  };\n\n  useEffect(() => {\n    if (values.length < 1e9) {\n      infiniteNums(values.length);\n    }\n  }, [values]);\n  useEffect(() => {\n    infiniteNums(values.length);\n    return () => {\n      clearTimeout(promiseTimer.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      float: \"left\",\n      width: \"100px\",\n      overflowY: \"auto\",\n      height: \"300px\",\n      marginRight: \"40px\",\n      padding: \"5px\"\n    },\n    children: values.map(val => /*#__PURE__*/_jsxDEV(RandomNumberItem, {\n      value: val\n    }, val, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RandomNumber, \"CcmE2HXBy1XftO18mHz21SFWmEU=\");\n\n_c = RandomNumber;\nexport default _c2 = /*#__PURE__*/memo(RandomNumber);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomNumber\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/components/RandomNumber/RandomNumber.js"],"names":["React","useState","useEffect","useRef","memo","RandomNumberItem","RandomNumber","values","setValues","promiseTimer","asyncItem","i","Promise","resolve","current","setTimeout","infiniteNums","startValue","buffer","item","length","clearTimeout","float","width","overflowY","height","marginRight","padding","map","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,OAAzD;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMQ,YAAY,GAAGN,MAAM,EAA3B;;AAEA,QAAMO,SAAS,GAAIC,CAAD,IAAO;AACvB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BJ,MAAAA,YAAY,CAACK,OAAb,GAAuBC,UAAU,CAAC,MAAMF,OAAO,CAACF,CAAD,CAAd,EAAmB,CAAnB,CAAjC;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAMK,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAK,IAAIP,CAAC,GAAGM,UAAb,EAAyBN,CAAC,GAAGM,UAAU,GAAG,GAA1C,EAA+CN,CAAC,EAAhD,EAAoD;AAClD,YAAMQ,IAAI,GAAG,MAAMT,SAAS,CAACC,CAAD,CAA5B;AACAO,MAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAYC,IAAZ,CAAT;AACD;;AAEDX,IAAAA,SAAS,CAAC,MAAM,CAAC,GAAGD,MAAJ,EAAY,GAAGW,MAAf,CAAP,CAAT;AACD,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAM,CAACa,MAAP,GAAgB,GAApB,EAAyB;AACvBJ,MAAAA,YAAY,CAACT,MAAM,CAACa,MAAR,CAAZ;AACD;AACF,GAJQ,EAIN,CAACb,MAAD,CAJM,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACT,MAAM,CAACa,MAAR,CAAZ;AAEA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACZ,YAAY,CAACK,OAAd,CAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,SAAS,EAAE,MAHN;AAILC,MAAAA,MAAM,EAAE,OAJH;AAKLC,MAAAA,WAAW,EAAE,MALR;AAMLC,MAAAA,OAAO,EAAE;AANJ,KADT;AAAA,cAUGpB,MAAM,CAACqB,GAAP,CAAYC,GAAD,iBACV,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEA;AAAzB,OAAmCA,GAAnC;AAAA;AAAA;AAAA;AAAA,YADD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnDD;;GAAMvB,Y;;KAAAA,Y;AAqDN,kCAAeF,IAAI,CAACE,YAAD,CAAnB","sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\nimport RandomNumberItem from \"./../RandomNumberItem/RandomNumberItem\";\n\nconst RandomNumber = () => {\n  const [values, setValues] = useState([]);\n  const promiseTimer = useRef();\n\n  const asyncItem = (i) => {\n    return new Promise((resolve) => {\n      promiseTimer.current = setTimeout(() => resolve(i), 0);\n    });\n  };\n\n  const infiniteNums = async (startValue) => {\n    let buffer = [];\n\n    for (let i = startValue; i < startValue + 100; i++) {\n      const item = await asyncItem(i);\n      buffer = [...buffer, item];\n    }\n\n    setValues(() => [...values, ...buffer]);\n  };\n\n  useEffect(() => {\n    if (values.length < 1e9) {\n      infiniteNums(values.length);\n    }\n  }, [values]);\n\n  useEffect(() => {\n    infiniteNums(values.length);\n\n    return () => {\n      clearTimeout(promiseTimer.current);\n    };\n  }, []);\n\n  return (\n    <ul\n      style={{\n        float: \"left\",\n        width: \"100px\",\n        overflowY: \"auto\",\n        height: \"300px\",\n        marginRight: \"40px\",\n        padding: \"5px\",\n      }}\n    >\n      {values.map((val) => (\n        <RandomNumberItem value={val} key={val} />\n      ))}\n    </ul>\n  );\n};\n\nexport default memo(RandomNumber);\n"]},"metadata":{},"sourceType":"module"}