{"ast":null,"code":"var _jsxFileName = \"/Users/eugenechernomor/Downloads/optimizationProject-main/src/components/PostsFilter/PostsFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport PostItem from \"../PostItem/PostItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostsFilter = ({\n  posts,\n  lastElement\n}) => {\n  _s();\n\n  const [filterdPosts, setFiltredPosts] = useState([]);\n  const [postFilter, setPostFilter] = useState(\"\");\n\n  const handleChange = e => {\n    setPostFilter(e.target.value);\n  };\n\n  const postsFiltredByInputValue = useMemo(() => {\n    return posts.filter(post => post.title.includes(postFilter) || post.body.includes(postFilter));\n  }, [postFilter, posts]);\n  useEffect(() => {\n    if (posts.length !== 0 && postsFiltredByInputValue.length === 0) {\n      lastElement.current.style.display = \"none\";\n    } else {\n      lastElement.current.style.display = \"block\";\n    }\n\n    setFiltredPosts(postsFiltredByInputValue);\n  }, [postsFiltredByInputValue, lastElement, posts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"postsFilter\",\n      variant: \"outlined\",\n      name: \"postsFilter\",\n      fullWidth: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        display: \"grid\",\n        maxWidth: \"80vw\",\n        gridGap: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        gridTemplateColumns: \"repeat(4, 1fr)\"\n      },\n      children: filterdPosts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostsFilter, \"397rhAxIAASlM7wLDzxxup6nQtI=\");\n\n_c = PostsFilter;\nexport default PostsFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsFilter\");","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/components/PostsFilter/PostsFilter.js"],"names":["React","useState","useEffect","useMemo","PostItem","TextField","PostsFilter","posts","lastElement","filterdPosts","setFiltredPosts","postFilter","setPostFilter","handleChange","e","target","value","postsFiltredByInputValue","filter","post","title","includes","body","length","current","style","display","maxWidth","gridGap","marginLeft","marginRight","gridTemplateColumns","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AAAA;;AAC9C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,wBAAwB,GAAGd,OAAO,CAAC,MAAM;AAC7C,WAAOI,KAAK,CAACW,MAAN,CACJC,IAAD,IACEA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBV,UAApB,KAAmCQ,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBV,UAAnB,CAFhC,CAAP;AAID,GALuC,EAKrC,CAACA,UAAD,EAAaJ,KAAb,CALqC,CAAxC;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACgB,MAAN,KAAiB,CAAjB,IAAsBN,wBAAwB,CAACM,MAAzB,KAAoC,CAA9D,EAAiE;AAC/Df,MAAAA,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;AACD,KAFD,MAEO;AACLlB,MAAAA,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,OAApC;AACD;;AACDhB,IAAAA,eAAe,CAACO,wBAAD,CAAf;AACD,GAPQ,EAON,CAACA,wBAAD,EAA2BT,WAA3B,EAAwCD,KAAxC,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,KAAK,EAAE;AACLa,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,UAAU,EAAE,MAJP;AAKLC,QAAAA,WAAW,EAAE,MALR;AAMLC,QAAAA,mBAAmB,EAAE;AANhB,OADT;AAAA,gBAUGtB,YAAY,CAACuB,GAAb,CAAkBb,IAAD,iBAChB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACc,EAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAyBD,CAjDD;;GAAM3B,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport PostItem from \"../PostItem/PostItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst PostsFilter = ({ posts, lastElement }) => {\n  const [filterdPosts, setFiltredPosts] = useState([]);\n  const [postFilter, setPostFilter] = useState(\"\");\n\n  const handleChange = (e) => {\n    setPostFilter(e.target.value);\n  };\n\n  const postsFiltredByInputValue = useMemo(() => {\n    return posts.filter(\n      (post) =>\n        post.title.includes(postFilter) || post.body.includes(postFilter)\n    );\n  }, [postFilter, posts]);\n\n  useEffect(() => {\n    if (posts.length !== 0 && postsFiltredByInputValue.length === 0) {\n      lastElement.current.style.display = \"none\";\n    } else {\n      lastElement.current.style.display = \"block\";\n    }\n    setFiltredPosts(postsFiltredByInputValue);\n  }, [postsFiltredByInputValue, lastElement, posts]);\n\n  return (\n    <>\n      <TextField\n        label=\"postsFilter\"\n        variant=\"outlined\"\n        name=\"postsFilter\"\n        fullWidth\n        onChange={handleChange}\n      />\n      <ul\n        style={{\n          display: \"grid\",\n          maxWidth: \"80vw\",\n          gridGap: \"20px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          gridTemplateColumns: \"repeat(4, 1fr)\",\n        }}\n      >\n        {filterdPosts.map((post) => (\n          <PostItem post={post} key={post.id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default PostsFilter;\n"]},"metadata":{},"sourceType":"module"}