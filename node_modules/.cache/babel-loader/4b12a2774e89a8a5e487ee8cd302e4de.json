{"ast":null,"code":"export const mappingPosts = ([posts, comments]) => {\n  if (!posts || !comments) return;\n  console.time(\"mapping posts and comments\");\n  const postsArray = [];\n  const postsLength = posts.length;\n  const commentsLength = comments.length;\n\n  for (let i = 0; i < postsLength * 10; i++) {\n    let obj, currentPostId, century;\n\n    if (posts[i]) {\n      obj = posts[i];\n      currentPostId = obj.id;\n    } else {\n      obj = posts[i % postsLength];\n      century = Math.floor(i / postsLength);\n      currentPostId = obj.id + postsLength * century;\n    }\n\n    const postComments = comments.filter(item => item.postId === obj.id);\n    postsArray[i] = { ...obj,\n      oldId: obj.id,\n      id: currentPostId,\n      comments: [...postComments.map(item => {\n        return { ...item,\n          id: i < postsLength ? item.id : item.id + commentsLength * century\n        };\n      })]\n    };\n  }\n\n  console.timeEnd(\"mapping posts and comments\");\n  return postsArray;\n};","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/helpers/mappingPosts.js"],"names":["mappingPosts","posts","comments","console","time","postsArray","postsLength","length","commentsLength","i","obj","currentPostId","century","id","Math","floor","postComments","filter","item","postId","oldId","map","timeEnd"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAAC,CAACC,KAAD,EAAQC,QAAR,CAAD,KAAuB;AACjD,MAAI,CAACD,KAAD,IAAU,CAACC,QAAf,EAAyB;AACzBC,EAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,QAAMC,WAAW,GAAGL,KAAK,CAACM,MAA1B;AACA,QAAMC,cAAc,GAAGN,QAAQ,CAACK,MAAhC;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,GAAG,EAAlC,EAAsCG,CAAC,EAAvC,EAA2C;AACzC,QAAIC,GAAJ,EAASC,aAAT,EAAwBC,OAAxB;;AAEA,QAAIX,KAAK,CAACQ,CAAD,CAAT,EAAc;AACZC,MAAAA,GAAG,GAAGT,KAAK,CAACQ,CAAD,CAAX;AACAE,MAAAA,aAAa,GAAGD,GAAG,CAACG,EAApB;AACD,KAHD,MAGO;AACLH,MAAAA,GAAG,GAAGT,KAAK,CAACQ,CAAC,GAAGH,WAAL,CAAX;AACAM,MAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWN,CAAC,GAAGH,WAAf,CAAV;AACAK,MAAAA,aAAa,GAAGD,GAAG,CAACG,EAAJ,GAASP,WAAW,GAAGM,OAAvC;AACD;;AAED,UAAMI,YAAY,GAAGd,QAAQ,CAACe,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBT,GAAG,CAACG,EAA9C,CAArB;AACAR,IAAAA,UAAU,CAACI,CAAD,CAAV,GAAgB,EACd,GAAGC,GADW;AAEdU,MAAAA,KAAK,EAAEV,GAAG,CAACG,EAFG;AAGdA,MAAAA,EAAE,EAAEF,aAHU;AAIdT,MAAAA,QAAQ,EAAE,CACR,GAAGc,YAAY,CAACK,GAAb,CAAkBH,IAAD,IAAU;AAC5B,eAAO,EACL,GAAGA,IADE;AAELL,UAAAA,EAAE,EAAEJ,CAAC,GAAGH,WAAJ,GAAkBY,IAAI,CAACL,EAAvB,GAA4BK,IAAI,CAACL,EAAL,GAAUL,cAAc,GAAGI;AAFtD,SAAP;AAID,OALE,CADK;AAJI,KAAhB;AAaD;;AACDT,EAAAA,OAAO,CAACmB,OAAR,CAAgB,4BAAhB;AACA,SAAOjB,UAAP;AACD,CArCM","sourcesContent":["export const mappingPosts = ([posts, comments]) => {\n  if (!posts || !comments) return;\n  console.time(\"mapping posts and comments\");\n  const postsArray = [];\n\n  const postsLength = posts.length;\n  const commentsLength = comments.length;\n\n  for (let i = 0; i < postsLength * 10; i++) {\n    let obj, currentPostId, century;\n\n    if (posts[i]) {\n      obj = posts[i];\n      currentPostId = obj.id;\n    } else {\n      obj = posts[i % postsLength];\n      century = Math.floor(i / postsLength);\n      currentPostId = obj.id + postsLength * century;\n    }\n\n    const postComments = comments.filter((item) => item.postId === obj.id);\n    postsArray[i] = {\n      ...obj,\n      oldId: obj.id,\n      id: currentPostId,\n      comments: [\n        ...postComments.map((item) => {\n          return {\n            ...item,\n            id: i < postsLength ? item.id : item.id + commentsLength * century,\n          };\n        }),\n      ],\n    };\n  }\n  console.timeEnd(\"mapping posts and comments\");\n  return postsArray;\n};\n"]},"metadata":{},"sourceType":"module"}