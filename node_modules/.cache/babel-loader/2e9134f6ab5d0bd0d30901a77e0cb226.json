{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nconst apiEndpoint = \"https://jsonplaceholder.typicode.com\";\n\nclass Api {\n  constructor(apiEndpoint) {\n    if (Api._instance) {\n      return Api._instance;\n    }\n\n    Api._instance = this;\n    if (apiEndpoint) this.api = axios.create({\n      baseURL: apiEndpoint\n    });\n    this.api.interceptors.request.use(config => {\n      return config;\n    });\n    this.api.interceptors.response.use(value => {\n      toast.success(\"Resolved!\");\n      return value;\n    }, error => {\n      toast.error(error.response.data);\n      return Promise.reject(error);\n    });\n  }\n\n}\n\nexport const API = new Api(apiEndpoint);","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/services/serviceAPI.js"],"names":["axios","toast","apiEndpoint","Api","constructor","_instance","api","create","baseURL","interceptors","request","use","config","response","value","success","error","data","Promise","reject","API"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,WAAW,GAAG,sCAApB;;AAEA,MAAMC,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACF,WAAD,EAAc;AACvB,QAAIC,GAAG,CAACE,SAAR,EAAmB;AACjB,aAAOF,GAAG,CAACE,SAAX;AACD;;AACDF,IAAAA,GAAG,CAACE,SAAJ,GAAgB,IAAhB;AAEA,QAAIH,WAAJ,EACE,KAAKI,GAAL,GAAWN,KAAK,CAACO,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAEN;AADa,KAAb,CAAX;AAIF,SAAKI,GAAL,CAASG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C,aAAOA,MAAP;AACD,KAFD;AAIA,SAAKN,GAAL,CAASG,YAAT,CAAsBI,QAAtB,CAA+BF,GAA/B,CACGG,KAAD,IAAW;AACTb,MAAAA,KAAK,CAACc,OAAN,CAAc,WAAd;AAEA,aAAOD,KAAP;AACD,KALH,EAMGE,KAAD,IAAW;AACTf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACH,QAAN,CAAeI,IAA3B;AAEA,aAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,KAVH;AAYD;;AA5BO;;AA+BV,OAAO,MAAMI,GAAG,GAAG,IAAIjB,GAAJ,CAAQD,WAAR,CAAZ","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst apiEndpoint = \"https://jsonplaceholder.typicode.com\";\n\nclass Api {\n  constructor(apiEndpoint) {\n    if (Api._instance) {\n      return Api._instance;\n    }\n    Api._instance = this;\n\n    if (apiEndpoint)\n      this.api = axios.create({\n        baseURL: apiEndpoint,\n      });\n\n    this.api.interceptors.request.use((config) => {\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (value) => {\n        toast.success(\"Resolved!\");\n\n        return value;\n      },\n      (error) => {\n        toast.error(error.response.data);\n\n        return Promise.reject(error);\n      }\n    );\n  }\n}\n\nexport const API = new Api(apiEndpoint);\n"]},"metadata":{},"sourceType":"module"}