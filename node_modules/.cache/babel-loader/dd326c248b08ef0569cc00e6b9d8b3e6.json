{"ast":null,"code":"import { GET_POSTS_REQUEST, GET_POSTS_SUCCESS, EDIT_POST, REMOVE_POST } from \"../actions/Posts\";\nconst initialState = {\n  postsList: [],\n  isFetching: false\n};\n\nconst postsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS_REQUEST:\n      return { ...state,\n        isFetching: true\n      };\n\n    case GET_POSTS_SUCCESS:\n      return { ...state,\n        postsList: [...state.postsList, ...payload],\n        isFetching: false\n      };\n\n    case EDIT_POST:\n      const {\n        id,\n        data\n      } = payload;\n      return { ...state,\n        postsList: state.postsList.map(item => {\n          if (item.id !== id) return item;\n          return { ...item,\n            ...data\n          };\n        })\n      };\n\n    case REMOVE_POST:\n      return { ...state,\n        postsList: [...state.postsList.filter(post => post.id !== payload)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/store/reducers/Posts.js"],"names":["GET_POSTS_REQUEST","GET_POSTS_SUCCESS","EDIT_POST","REMOVE_POST","initialState","postsList","isFetching","postsReducer","state","action","type","payload","id","data","map","item","filter","post"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKV,iBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AAEF,SAAKL,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqB,GAAGM,OAAxB,CAFN;AAGLL,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKJ,SAAL;AACE,YAAM;AAAEU,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeF,OAArB;AAEA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBS,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB,OAAOG,IAAP;AAEpB,iBAAO,EAAE,GAAGA,IAAL;AAAW,eAAGF;AAAd,WAAP;AACD,SAJU;AAFN,OAAP;;AAQF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAN,CAAgBW,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYD,OAA7C,CAAJ;AAFN,OAAP;;AAIF;AACE,aAAOH,KAAP;AA3BJ;AA6BD,CAhCD;;AAkCA,eAAeD,YAAf","sourcesContent":["import {\n  GET_POSTS_REQUEST,\n  GET_POSTS_SUCCESS,\n  EDIT_POST,\n  REMOVE_POST,\n} from \"../actions/Posts\";\n\nconst initialState = { postsList: [], isFetching: false };\n\nconst postsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS_REQUEST:\n      return { ...state, isFetching: true };\n\n    case GET_POSTS_SUCCESS:\n      return {\n        ...state,\n        postsList: [...state.postsList, ...payload],\n        isFetching: false,\n      };\n    case EDIT_POST:\n      const { id, data } = payload;\n\n      return {\n        ...state,\n        postsList: state.postsList.map((item) => {\n          if (item.id !== id) return item;\n\n          return { ...item, ...data };\n        }),\n      };\n    case REMOVE_POST:\n      return {\n        ...state,\n        postsList: [...state.postsList.filter((post) => post.id !== payload)],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n"]},"metadata":{},"sourceType":"module"}