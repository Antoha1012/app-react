{"ast":null,"code":"import{useEffect,useRef}from\"react\";export var useObserver=function useObserver(ref,canLoad,isLoading,callback,visiblePosts){var observer=useRef();useEffect(function(){if(isLoading)return;if(observer.current)observer.current.disconnect();var cb=function cb(entries,observer){if(entries[0].isIntersecting&&canLoad){setTimeout(function(){callback(visiblePosts);},50);}};observer.current=new IntersectionObserver(cb);observer.current.observe(ref.current);},[isLoading,visiblePosts]);};","map":{"version":3,"sources":["/Users/eugenechernomor/Downloads/optimizationProject-main/src/hooks/useObserver.js"],"names":["useEffect","useRef","useObserver","ref","canLoad","isLoading","callback","visiblePosts","observer","current","disconnect","cb","entries","isIntersecting","setTimeout","IntersectionObserver","observe"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CACzBC,GADyB,CAEzBC,OAFyB,CAGzBC,SAHyB,CAIzBC,QAJyB,CAKzBC,YALyB,CAMtB,CACH,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,EAAvB,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIK,SAAJ,CAAe,OACf,GAAIG,QAAQ,CAACC,OAAb,CAAsBD,QAAQ,CAACC,OAAT,CAAiBC,UAAjB,GAEtB,GAAMC,CAAAA,EAAE,CAAG,QAALA,CAAAA,EAAK,CAAUC,OAAV,CAAmBJ,QAAnB,CAA6B,CACtC,GAAII,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,EAA6BT,OAAjC,CAA0C,CACxCU,UAAU,CAAC,UAAM,CACfR,QAAQ,CAACC,YAAD,CAAR,CACD,CAFS,CAEP,EAFO,CAAV,CAGD,CACF,CAND,CAOAC,QAAQ,CAACC,OAAT,CAAmB,GAAIM,CAAAA,oBAAJ,CAAyBJ,EAAzB,CAAnB,CACAH,QAAQ,CAACC,OAAT,CAAiBO,OAAjB,CAAyBb,GAAG,CAACM,OAA7B,EACD,CAbQ,CAaN,CAACJ,SAAD,CAAYE,YAAZ,CAbM,CAAT,CAcD,CAvBM","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport const useObserver = (\n  ref,\n  canLoad,\n  isLoading,\n  callback,\n  visiblePosts\n) => {\n  const observer = useRef();\n\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n\n    const cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        setTimeout(() => {\n          callback(visiblePosts);\n        }, 50);\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading, visiblePosts]);\n};\n"]},"metadata":{},"sourceType":"module"}